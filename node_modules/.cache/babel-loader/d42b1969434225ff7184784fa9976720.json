{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\apiconsume\\\\src\\\\pages\\\\Aluno\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { forOwnRight, get } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { isEmail, isInt, isFloat } from 'validator';\nimport { useDispatch } from 'react-redux';\nimport { FaEdit, FaUserCircle } from 'react-icons/fa';\nimport { toast } from 'react-toastify';\nimport { Link } from 'react-router-dom';\nimport { Container } from '../../styles/GlobalStyles';\nimport { Form, ProfilePicture, Title } from './styled';\nimport Loading from '../../components/Loading';\nimport * as actions from '../../store/modules/auth/actions';\nimport axios from '../../services/axios';\nimport history from '../../services/history';\nexport default function Aluno({\n  match\n}) {\n  const id = get(match, 'params.id', '');\n  const dispatch = useDispatch();\n  const [nome, setNome] = useState('');\n  const [sobrenome, setSobrenome] = useState('');\n  const [email, setEmail] = useState('');\n  const [idade, setIdade] = useState('');\n  const [peso, setPeso] = useState('');\n  const [altura, setAltura] = useState('');\n  const [foto, setFoto] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    if (!id) return;\n\n    async function getData() {\n      try {\n        setIsLoading(true);\n        const {\n          data\n        } = await axios.get(`/alunos/${id}`);\n        const Foto = get(data, 'Fotos[0].url', '');\n        setFoto(Foto);\n        setNome(data.nome);\n        setSobrenome(data.sobrenome);\n        setEmail(data.email);\n        setIdade(data.idade);\n        setPeso(data.peso);\n        setAltura(data.altura);\n        setIsLoading(false);\n      } catch (err) {\n        setIsLoading(false);\n        const errors = get(err, 'response.data.errors', []);\n        const status = get(err, 'response.status', 0);\n        if (status === 400) errors.map(error => toast.error(error));\n        history.push('/');\n      }\n    }\n\n    getData();\n  }, [id]);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    let formErrors = false;\n\n    if (nome.length < 3 || nome.length > 255) {\n      formErrors = true;\n      toast.error('Nome precisa ter de 3 a 255 carácteres');\n    }\n\n    if (sobrenome.length < 3 || sobrenome.length > 255) {\n      formErrors = true;\n      toast.error('Sobrenome precisa ter de 3 a 255 carácteres');\n    }\n\n    if (!isEmail(email)) {\n      formErrors = true;\n      toast.error('Formato de email inválido');\n    }\n\n    if (!isInt(String(idade))) {\n      formErrors = true;\n      toast.error('Formato de idade inválido');\n    }\n\n    if (!isFloat(String(peso))) {\n      formErrors = true;\n      toast.error('Formato de peso inválido');\n    }\n\n    if (!isFloat(String(altura))) {\n      formErrors = true;\n      toast.error('Formato de altura inválido');\n    }\n\n    if (formErrors) return;\n\n    try {\n      if (id) {\n        // Esta editando\n        await axios.put(`/alunos/${id}`, {\n          nome,\n          sobrenome,\n          email,\n          idade,\n          peso,\n          altura\n        });\n        toast.success('Aluno editado com sucesso');\n        history.push('/');\n      } else {\n        // Está criando\n        const {\n          data\n        } = await axios.post('/alunos/', {\n          nome,\n          sobrenome,\n          email,\n          idade,\n          peso,\n          altura\n        });\n        toast.success('Aluno criado com sucesso');\n        history.push(`/aluno/${data.id}/edit`);\n      }\n\n      setIsLoading(false);\n    } catch (err) {\n      const status = get(err, 'response.status', 0);\n      const data = get(err, 'response.data', {});\n      const errors = get(data, 'errors', []);\n\n      if (errors.length > 0) {\n        errors.map(error => toast.error(error));\n      } else {\n        toast.error('Erro desconhecido');\n      }\n\n      if (status === 401) dispatch(actions.loginFailure());\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Loading, {\n    isLoading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, id ? 'Editar aluno' : 'Novo aluno'), id && /*#__PURE__*/React.createElement(ProfilePicture, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, foto ? /*#__PURE__*/React.createElement(\"img\", {\n    src: foto,\n    alt: nome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(FaUserCircle, {\n    size: 180,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 51\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: `/fotos/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FaEdit, {\n    size: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: nome,\n    onChange: e => setNome(e.target.value),\n    placeholder: \"Nome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: sobrenome,\n    onChange: e => setSobrenome(e.target.value),\n    placeholder: \"Sobrenome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    placeholder: \"E-mail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    value: idade,\n    onChange: e => setIdade(e.target.value),\n    placeholder: \"Idade\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: peso,\n    onChange: e => setPeso(e.target.value),\n    placeholder: \"Peso\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: altura,\n    onChange: e => setAltura(e.target.value),\n    placeholder: \"Altura\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, id ? 'Editar' : 'Cadastrar')));\n}\nAluno.propTypes = {\n  match: PropTypes.shape({}).isRequired\n};","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/apiconsume/src/pages/Aluno/index.js"],"names":["React","useState","useEffect","forOwnRight","get","PropTypes","isEmail","isInt","isFloat","useDispatch","FaEdit","FaUserCircle","toast","Link","Container","Form","ProfilePicture","Title","Loading","actions","axios","history","Aluno","match","id","dispatch","nome","setNome","sobrenome","setSobrenome","email","setEmail","idade","setIdade","peso","setPeso","altura","setAltura","foto","setFoto","isLoading","setIsLoading","getData","data","Foto","err","errors","status","map","error","push","handleSubmit","e","preventDefault","formErrors","length","String","put","success","post","loginFailure","target","value","propTypes","shape","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { forOwnRight, get } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { isEmail, isInt, isFloat } from 'validator';\nimport { useDispatch } from 'react-redux';\nimport { FaEdit, FaUserCircle } from 'react-icons/fa';\nimport { toast } from 'react-toastify';\nimport { Link } from 'react-router-dom';\n\nimport { Container } from '../../styles/GlobalStyles';\nimport { Form, ProfilePicture, Title } from './styled';\nimport Loading from '../../components/Loading';\nimport * as actions from '../../store/modules/auth/actions';\n\nimport axios from '../../services/axios';\nimport history from '../../services/history';\n\nexport default function Aluno({ match }) {\n  const id = get(match, 'params.id', '');\n  const dispatch = useDispatch();\n\n  const [nome, setNome] = useState('');\n  const [sobrenome, setSobrenome] = useState('');\n  const [email, setEmail] = useState('');\n  const [idade, setIdade] = useState('');\n  const [peso, setPeso] = useState('');\n  const [altura, setAltura] = useState('');\n  const [foto, setFoto] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!id) return;\n    async function getData() {\n      try {\n        setIsLoading(true);\n        const { data } = await axios.get(`/alunos/${id}`);\n        const Foto = get(data, 'Fotos[0].url', '');\n\n        setFoto(Foto);\n\n        setNome(data.nome);\n        setSobrenome(data.sobrenome);\n        setEmail(data.email);\n        setIdade(data.idade);\n        setPeso(data.peso);\n        setAltura(data.altura);\n\n        setIsLoading(false);\n      } catch (err) {\n        setIsLoading(false);\n        const errors = get(err, 'response.data.errors', []);\n        const status = get(err, 'response.status', 0);\n\n        if (status === 400) errors.map((error) => toast.error(error));\n        history.push('/');\n      }\n    }\n    getData();\n  }, [id]);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    let formErrors = false;\n\n    if (nome.length < 3 || nome.length > 255) {\n      formErrors = true;\n      toast.error('Nome precisa ter de 3 a 255 carácteres');\n    }\n\n    if (sobrenome.length < 3 || sobrenome.length > 255) {\n      formErrors = true;\n      toast.error('Sobrenome precisa ter de 3 a 255 carácteres');\n    }\n\n    if (!isEmail(email)) {\n      formErrors = true;\n      toast.error('Formato de email inválido');\n    }\n\n    if (!isInt(String(idade))) {\n      formErrors = true;\n      toast.error('Formato de idade inválido');\n    }\n\n    if (!isFloat(String(peso))) {\n      formErrors = true;\n      toast.error('Formato de peso inválido');\n    }\n\n    if (!isFloat(String(altura))) {\n      formErrors = true;\n      toast.error('Formato de altura inválido');\n    }\n\n    if (formErrors) return;\n\n    try {\n      if (id) {\n        // Esta editando\n        await axios.put(`/alunos/${id}`, {\n          nome,\n          sobrenome,\n          email,\n          idade,\n          peso,\n          altura,\n        });\n        toast.success('Aluno editado com sucesso');\n        history.push('/');\n      } else {\n        // Está criando\n        const { data } = await axios.post('/alunos/', {\n          nome,\n          sobrenome,\n          email,\n          idade,\n          peso,\n          altura,\n        });\n        toast.success('Aluno criado com sucesso');\n        history.push(`/aluno/${data.id}/edit`);\n      }\n      setIsLoading(false);\n    } catch (err) {\n      const status = get(err, 'response.status', 0);\n      const data = get(err, 'response.data', {});\n      const errors = get(data, 'errors', []);\n\n      if (errors.length > 0) {\n        errors.map((error) => toast.error(error));\n      } else {\n        toast.error('Erro desconhecido');\n      }\n\n      if (status === 401) dispatch(actions.loginFailure());\n    }\n  }\n  return (\n    <Container>\n      <Loading isLoading={isLoading} />\n\n      <Title>{id ? 'Editar aluno' : 'Novo aluno'}</Title>\n\n      {id && (\n        <ProfilePicture>\n          {foto ? <img src={foto} alt={nome} /> : <FaUserCircle size={180} />}\n          <Link to={`/fotos/${id}`}>\n            <FaEdit size={24} />\n          </Link>\n        </ProfilePicture>\n      )}\n\n      <Form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={nome}\n          onChange={(e) => setNome(e.target.value)}\n          placeholder=\"Nome\"\n        />\n        <input\n          type=\"text\"\n          value={sobrenome}\n          onChange={(e) => setSobrenome(e.target.value)}\n          placeholder=\"Sobrenome\"\n        />\n        <input\n          type=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"E-mail\"\n        />\n        <input\n          type=\"number\"\n          value={idade}\n          onChange={(e) => setIdade(e.target.value)}\n          placeholder=\"Idade\"\n        />\n        <input\n          type=\"text\"\n          value={peso}\n          onChange={(e) => setPeso(e.target.value)}\n          placeholder=\"Peso\"\n        />\n        <input\n          type=\"text\"\n          value={altura}\n          onChange={(e) => setAltura(e.target.value)}\n          placeholder=\"Altura\"\n        />\n\n        <button type=\"submit\">{id ? 'Editar' : 'Cadastrar'}</button>\n      </Form>\n    </Container>\n  );\n}\n\nAluno.propTypes = {\n  match: PropTypes.shape({}).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}