{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\apiconsume\\\\src\\\\pages\\\\Fotos\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport { get } from 'lodash';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { Container } from '../../styles/GlobalStyles';\nimport Loading from '../../components/Loading';\nimport { Title, Form, Paragraph } from './styled';\nimport axios from '../../services/axios';\nimport * as actions from '../../store/modules/auth/actions';\nexport default function Fotos({\n  match,\n  history\n}) {\n  const dispatch = useDispatch();\n  const id = get(match, 'params.id', '');\n  const [isLoading, setIsLoading] = useState(false);\n  const [foto, setFoto] = useState('');\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        setIsLoading(true);\n        const {\n          data\n        } = await axios.get(`/alunos/${id}`);\n        setFoto(get(data, 'Fotos[0].url', ''));\n        setIsLoading(false);\n      } catch {\n        toast.error('Erro ao obter imagem');\n        setIsLoading(false);\n        history.push('/');\n      }\n    };\n\n    getData();\n  }, [id, history]);\n\n  const handleChange = async e => {\n    const file = e.target.files[0];\n    const fotoURL = URL.createObjectURL(file);\n    setFoto(fotoURL);\n    const formData = new FormData();\n    formData.append('aluno_id', id);\n    formData.append('foto', file);\n\n    try {\n      setIsLoading(true);\n      await axios.post('/fotos/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      toast.success('Foto enviada com sucesso!');\n      setIsLoading(false);\n    } catch (err) {\n      setIsLoading(false);\n      const {\n        status\n      } = get(err, 'response', '');\n      toast.error('Erro ao enviar foto.');\n      if (status === 401) dispatch(actions.loginFailure());\n    }\n  };\n\n  const handleClick = e => {\n    e.preventDefault();\n    history.push('/');\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Loading, {\n    isLoading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"Foto de perfil\"), foto ? /*#__PURE__*/React.createElement(Paragraph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, \"Clique na foto para alterar\") : '', /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"foto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, foto ? /*#__PURE__*/React.createElement(\"img\", {\n    src: foto,\n    alt: \"Foto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }\n  }) : 'Selecionar', /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"foto\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"Voltar\")));\n}\nFotos.propTypes = {\n  match: PropTypes.shape({}).isRequired,\n  history: PropTypes.shape([]).isRequired\n};","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/apiconsume/src/pages/Fotos/index.js"],"names":["React","useEffect","useState","get","toast","PropTypes","useDispatch","Container","Loading","Title","Form","Paragraph","axios","actions","Fotos","match","history","dispatch","id","isLoading","setIsLoading","foto","setFoto","getData","data","error","push","handleChange","e","file","target","files","fotoURL","URL","createObjectURL","formData","FormData","append","post","headers","success","err","status","loginFailure","handleClick","preventDefault","propTypes","shape","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { get } from 'lodash';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\nimport { Container } from '../../styles/GlobalStyles';\nimport Loading from '../../components/Loading';\nimport { Title, Form, Paragraph } from './styled';\nimport axios from '../../services/axios';\nimport * as actions from '../../store/modules/auth/actions';\n\nexport default function Fotos({ match, history }) {\n  const dispatch = useDispatch();\n  const id = get(match, 'params.id', '');\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [foto, setFoto] = useState('');\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        setIsLoading(true);\n        const { data } = await axios.get(`/alunos/${id}`);\n        setFoto(get(data, 'Fotos[0].url', ''));\n        setIsLoading(false);\n      } catch {\n        toast.error('Erro ao obter imagem');\n        setIsLoading(false);\n        history.push('/');\n      }\n    };\n\n    getData();\n  }, [id, history]);\n\n  const handleChange = async (e) => {\n    const file = e.target.files[0];\n    const fotoURL = URL.createObjectURL(file);\n\n    setFoto(fotoURL);\n\n    const formData = new FormData();\n    formData.append('aluno_id', id);\n    formData.append('foto', file);\n\n    try {\n      setIsLoading(true);\n\n      await axios.post('/fotos/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      toast.success('Foto enviada com sucesso!');\n\n      setIsLoading(false);\n    } catch (err) {\n      setIsLoading(false);\n      const { status } = get(err, 'response', '');\n      toast.error('Erro ao enviar foto.');\n\n      if (status === 401) dispatch(actions.loginFailure());\n    }\n  };\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    history.push('/');\n  };\n\n  return (\n    <Container>\n      <Loading isLoading={isLoading} />\n\n      <Title>Foto de perfil</Title>\n      {foto ? <Paragraph>Clique na foto para alterar</Paragraph> : ''}\n\n      <Form>\n        <label htmlFor=\"foto\">\n          {foto ? <img src={foto} alt=\"Foto\" /> : 'Selecionar'}\n          <input type=\"file\" id=\"foto\" onChange={handleChange} />\n        </label>\n\n        <button type=\"submit\" onClick={handleClick}>\n          Voltar\n        </button>\n      </Form>\n    </Container>\n  );\n}\n\nFotos.propTypes = {\n  match: PropTypes.shape({}).isRequired,\n  history: PropTypes.shape([]).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}