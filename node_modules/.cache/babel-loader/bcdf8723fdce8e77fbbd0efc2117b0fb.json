{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\apiconsume\\\\src\\\\routes\\\\PrivateRoute.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nexport default function PrivateRoute({\n  component: Component,\n  isClosed,\n  ...rest\n}) {\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn); // Usuario nao esta logado\n\n  if (isClosed && !isLoggedIn) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: '/login',\n        state: {\n          prevPath: rest.location.pathname\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    });\n  } // eslint-disable-next-line react/jsx-props-no-spreading\n\n\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    component: Component,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 10\n    }\n  }));\n} // Propriedades\n\nPrivateRoute.defaultProps = {\n  isClosed: false\n};\nPrivateRoute.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired,\n  isClosed: PropTypes.bool\n};","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/apiconsume/src/routes/PrivateRoute.js"],"names":["React","PropTypes","Route","Redirect","useSelector","PrivateRoute","component","Component","isClosed","rest","isLoggedIn","state","auth","pathname","prevPath","location","defaultProps","propTypes","oneOfType","element","func","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,eAAe,SAASC,YAAT,CAAsB;AACnCC,EAAAA,SAAS,EAAEC,SADwB;AAEnCC,EAAAA,QAFmC;AAGnC,KAAGC;AAHgC,CAAtB,EAIZ;AACD,QAAMC,UAAU,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,UAAvB,CAA9B,CADC,CACiE;;AAElE,MAAIF,QAAQ,IAAI,CAACE,UAAjB,EAA6B;AAC3B,wBACE,oBAAC,QAAD;AACE,MAAA,EAAE,EAAE;AAAEG,QAAAA,QAAQ,EAAE,QAAZ;AAAsBF,QAAAA,KAAK,EAAE;AAAEG,UAAAA,QAAQ,EAAEL,IAAI,CAACM,QAAL,CAAcF;AAA1B;AAA7B,OADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAKD,GATA,CAWD;;;AACA,sBAAO,oBAAC,KAAD,oBAAWJ,IAAX;AAAiB,IAAA,SAAS,EAAEF,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,C,CAED;;AAEAF,YAAY,CAACW,YAAb,GAA4B;AAC1BR,EAAAA,QAAQ,EAAE;AADgB,CAA5B;AAIAH,YAAY,CAACY,SAAb,GAAyB;AACvBX,EAAAA,SAAS,EAAEL,SAAS,CAACiB,SAAV,CAAoB,CAACjB,SAAS,CAACkB,OAAX,EAAoBlB,SAAS,CAACmB,IAA9B,CAApB,EACRC,UAFoB;AAGvBb,EAAAA,QAAQ,EAAEP,SAAS,CAACqB;AAHG,CAAzB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nexport default function PrivateRoute({\n  component: Component,\n  isClosed,\n  ...rest\n}) {\n  const isLoggedIn = useSelector((state) => state.auth.isLoggedIn); // Usuario nao esta logado\n\n  if (isClosed && !isLoggedIn) {\n    return (\n      <Redirect\n        to={{ pathname: '/login', state: { prevPath: rest.location.pathname } }}\n      />\n    );\n  }\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return <Route {...rest} component={Component} />;\n}\n\n// Propriedades\n\nPrivateRoute.defaultProps = {\n  isClosed: false,\n};\n\nPrivateRoute.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func])\n    .isRequired,\n  isClosed: PropTypes.bool,\n};\n"]},"metadata":{},"sourceType":"module"}