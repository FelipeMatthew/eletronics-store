{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\apiconsume\\\\src\\\\pages\\\\Register\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { isEmail } from 'validator';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Container } from '../../styles/GlobalStyles';\nimport { Form } from './styled';\nimport * as actions from '../../store/modules/auth/actions';\nimport Loading from '../../components/Loading';\nexport default function Register() {\n  const dispatch = useDispatch();\n  const id = useSelector(state => state.auth.user.id);\n  const nomeStored = useSelector(state => state.auth.user.nome);\n  const emailStored = useSelector(state => state.auth.user.email);\n  const isLoading = useSelector(state => state.auth.user.isLoading);\n  const [nome, setNome] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  useEffect(() => {\n    if (!id) return;\n    setNome(nomeStored);\n    setEmail(emailStored);\n  }, [emailStored, id, nomeStored]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let formErrors = false; // Validations\n\n    if (nome.length < 3 || nome.length > 255) {\n      formErrors = true;\n      toast.error('Nome deve ter entre 3 e 255 caracteres');\n    }\n\n    if (!isEmail(email)) {\n      formErrors = true;\n      toast.error('E-mail inválido');\n    }\n\n    if (!id && (password.length < 6 || password.length > 40)) {\n      formErrors = true;\n      toast.error('Senha deve ter entre 6 e 40 caracteres');\n    }\n\n    if (formErrors) return;\n    dispatch(actions.registerRequest({\n      id,\n      nome,\n      email,\n      password\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Loading, {\n    isLoading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, id ? 'Editar dados' : 'Crie sua conta!'), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"nome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Nome:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: nome,\n    onChange: e => setNome(e.target.value),\n    placeholder: \"Seu nome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"E-mail:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    placeholder: \"Seu email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, id ? 'Senha: (Campo não obrigatório)' : 'Senha:', /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    placeholder: \"Sua senha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, id ? 'Editar minha conta' : 'Criar minha conta')));\n}","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/apiconsume/src/pages/Register/index.js"],"names":["React","useState","useEffect","toast","isEmail","useSelector","useDispatch","Container","Form","actions","Loading","Register","dispatch","id","state","auth","user","nomeStored","nome","emailStored","email","isLoading","setNome","setEmail","password","setPassword","handleSubmit","e","preventDefault","formErrors","length","error","registerRequest","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { isEmail } from 'validator';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { Container } from '../../styles/GlobalStyles';\nimport { Form } from './styled';\nimport * as actions from '../../store/modules/auth/actions';\n\nimport Loading from '../../components/Loading';\n\nexport default function Register() {\n  const dispatch = useDispatch();\n\n  const id = useSelector((state) => state.auth.user.id);\n  const nomeStored = useSelector((state) => state.auth.user.nome);\n  const emailStored = useSelector((state) => state.auth.user.email);\n  const isLoading = useSelector((state) => state.auth.user.isLoading);\n\n  const [nome, setNome] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  useEffect(() => {\n    if (!id) return;\n    setNome(nomeStored);\n    setEmail(emailStored);\n  }, [emailStored, id, nomeStored]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let formErrors = false;\n\n    // Validations\n    if (nome.length < 3 || nome.length > 255) {\n      formErrors = true;\n      toast.error('Nome deve ter entre 3 e 255 caracteres');\n    }\n\n    if (!isEmail(email)) {\n      formErrors = true;\n      toast.error('E-mail inválido');\n    }\n\n    if (!id && (password.length < 6 || password.length > 40)) {\n      formErrors = true;\n      toast.error('Senha deve ter entre 6 e 40 caracteres');\n    }\n\n    if (formErrors) return;\n\n    dispatch(actions.registerRequest({ id, nome, email, password }));\n  };\n\n  return (\n    <Container>\n      <Loading isLoading={isLoading} />\n\n      <h1>{id ? 'Editar dados' : 'Crie sua conta!'}</h1>\n\n      <Form onSubmit={handleSubmit}>\n        <label htmlFor=\"nome\">\n          Nome:\n          <input\n            type=\"text\"\n            value={nome}\n            onChange={(e) => setNome(e.target.value)}\n            placeholder=\"Seu nome\"\n          />\n        </label>\n\n        <label htmlFor=\"email\">\n          E-mail:\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"Seu email\"\n          />\n        </label>\n\n        <label htmlFor=\"password\">\n          {id ? 'Senha: (Campo não obrigatório)' : 'Senha:'}\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            placeholder=\"Sua senha\"\n          />\n        </label>\n\n        <button type=\"submit\">\n          {id ? 'Editar minha conta' : 'Criar minha conta'}\n        </button>\n      </Form>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}