{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\apiconsume\\\\src\\\\pages\\\\Login\\\\index.js\";\nimport React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { isEmail } from 'validator';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { get } from 'lodash';\nimport * as actions from '../../store/modules/auth/actions';\nimport { Container } from '../../styles/GlobalStyles';\nimport { Form } from './styled';\nimport Loading from '../../components/Loading';\nexport default function Login(props) {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(state => state.auth.isLoading);\n  const prevPath = get(props, 'location.state.prevPath', '/');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let formErrors = false;\n\n    if (!isEmail(email)) {\n      formErrors = true;\n      toast.error('E-mail inv치lido');\n    }\n\n    if (password.length < 6 || password.length > 40) {\n      formErrors = true;\n      toast.error('Senha inv치lida');\n    }\n\n    if (formErrors) return;\n    dispatch(actions.loginRequest({\n      email,\n      password,\n      prevPath\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Loading, {\n    isLoading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    placeholder: \"Seu e-mail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    placeholder: \"Sua senha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Acessar\")));\n}","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/apiconsume/src/pages/Login/index.js"],"names":["React","useState","toast","isEmail","useDispatch","useSelector","get","actions","Container","Form","Loading","Login","props","dispatch","isLoading","state","auth","prevPath","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","formErrors","error","length","loginRequest","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,GAAT,QAAoB,QAApB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,kCAAzB;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,IAAT,QAAqB,UAArB;AAEA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACnC,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAEA,QAAMU,SAAS,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,SAAvB,CAA7B;AACA,QAAMG,QAAQ,GAAGX,GAAG,CAACM,KAAD,EAAQ,yBAAR,EAAmC,GAAnC,CAApB;AAEA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMqB,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,UAAU,GAAG,KAAjB;;AAEA,QAAI,CAACtB,OAAO,CAACe,KAAD,CAAZ,EAAqB;AACnBO,MAAAA,UAAU,GAAG,IAAb;AACAvB,MAAAA,KAAK,CAACwB,KAAN,CAAY,iBAAZ;AACD;;AAED,QAAIN,QAAQ,CAACO,MAAT,GAAkB,CAAlB,IAAuBP,QAAQ,CAACO,MAAT,GAAkB,EAA7C,EAAiD;AAC/CF,MAAAA,UAAU,GAAG,IAAb;AACAvB,MAAAA,KAAK,CAACwB,KAAN,CAAY,gBAAZ;AACD;;AAED,QAAID,UAAJ,EAAgB;AAEhBZ,IAAAA,QAAQ,CAACN,OAAO,CAACqB,YAAR,CAAqB;AAAEV,MAAAA,KAAF;AAASE,MAAAA,QAAT;AAAmBH,MAAAA;AAAnB,KAArB,CAAD,CAAR;AACD,GAjBD;;AAmBA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEH,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,eAKE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEQ,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEJ,KAFT;AAGE,IAAA,QAAQ,EAAGK,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACM,MAAF,CAASC,KAAV,CAH3B;AAIE,IAAA,WAAW,EAAC,YAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,KAAK,EAAEV,QAFT;AAGE,IAAA,QAAQ,EAAGG,CAAD,IAAOF,WAAW,CAACE,CAAC,CAACM,MAAF,CAASC,KAAV,CAH9B;AAIE,IAAA,WAAW,EAAC,WAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eAeE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAfF,CALF,CADF;AAyBD","sourcesContent":["import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { isEmail } from 'validator';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { get } from 'lodash';\n\nimport * as actions from '../../store/modules/auth/actions';\nimport { Container } from '../../styles/GlobalStyles';\nimport { Form } from './styled';\n\nimport Loading from '../../components/Loading';\n\nexport default function Login(props) {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector((state) => state.auth.isLoading);\n  const prevPath = get(props, 'location.state.prevPath', '/');\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let formErrors = false;\n\n    if (!isEmail(email)) {\n      formErrors = true;\n      toast.error('E-mail inv치lido');\n    }\n\n    if (password.length < 6 || password.length > 40) {\n      formErrors = true;\n      toast.error('Senha inv치lida');\n    }\n\n    if (formErrors) return;\n\n    dispatch(actions.loginRequest({ email, password, prevPath }));\n  };\n\n  return (\n    <Container>\n      <Loading isLoading={isLoading} />\n\n      <h1>Login</h1>\n\n      <Form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"Seu e-mail\"\n        />\n\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Sua senha\"\n        />\n\n        <button type=\"submit\">Acessar</button>\n      </Form>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}